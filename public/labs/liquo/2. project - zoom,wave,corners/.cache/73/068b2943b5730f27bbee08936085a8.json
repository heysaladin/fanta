{"id":"shaders/vertex.glsl","dependencies":[{"name":"/Users/akella/package.json","includedInParent":true,"mtime":1625327502542}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\nuniform float time;\\nuniform float uProgress;\\nuniform vec2 uResolution;\\nuniform vec2 uQuadSize;\\nuniform vec4 uCorners;\\nvarying vec2 vSize;\\n\\nvarying vec2 vUv;\\nvoid main() {\\n    float PI = 3.1415926;\\n    vUv = uv;\\n    float sine = sin(PI*uProgress);\\n    float waves = sine*0.1*sin(5.*length(uv) + 15.*uProgress);\\n    vec4 defaultState = modelMatrix*vec4( position, 1.0 );\\n    vec4 fullScreenState = vec4( position, 1.0 );\\n    fullScreenState.x *=uResolution.x/uQuadSize.x;\\n    fullScreenState.y *=uResolution.y/uQuadSize.y;\\n    float cornersProgress = mix(\\n        mix(uCorners.z,uCorners.w,uv.x),\\n        mix(uCorners.x,uCorners.y,uv.x),\\n        uv.y\\n    );\\n\\n    vec4 finalState = mix(defaultState,fullScreenState,uProgress + waves);\\n\\n    vSize = mix(uQuadSize,uResolution,uProgress);\\n\\n    gl_Position = projectionMatrix * viewMatrix * finalState;\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"shaders/vertex.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"shaders/vertex.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"shaders/vertex.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"shaders/vertex.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"shaders/vertex.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":913},"source":"shaders/vertex.glsl","original":{"line":1,"column":0}}],"sources":{"shaders/vertex.glsl":"module.exports=\"#define GLSLIFY 1\\nuniform float time;\\nuniform float uProgress;\\nuniform vec2 uResolution;\\nuniform vec2 uQuadSize;\\nuniform vec4 uCorners;\\nvarying vec2 vSize;\\n\\nvarying vec2 vUv;\\nvoid main() {\\n    float PI = 3.1415926;\\n    vUv = uv;\\n    float sine = sin(PI*uProgress);\\n    float waves = sine*0.1*sin(5.*length(uv) + 15.*uProgress);\\n    vec4 defaultState = modelMatrix*vec4( position, 1.0 );\\n    vec4 fullScreenState = vec4( position, 1.0 );\\n    fullScreenState.x *=uResolution.x/uQuadSize.x;\\n    fullScreenState.y *=uResolution.y/uQuadSize.y;\\n    float cornersProgress = mix(\\n        mix(uCorners.z,uCorners.w,uv.x),\\n        mix(uCorners.x,uCorners.y,uv.x),\\n        uv.y\\n    );\\n\\n    vec4 finalState = mix(defaultState,fullScreenState,uProgress + waves);\\n\\n    vSize = mix(uQuadSize,uResolution,uProgress);\\n\\n    gl_Position = projectionMatrix * viewMatrix * finalState;\\n}\";"},"lineCount":null}},"error":null,"hash":"e2214dec0c5187a5b64b13aab0a9bc0e","cacheData":{"env":{}}}